<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>01-关键字-标识符-数据类型</title>
    <url>/2021/04/07/01-%E5%85%B3%E9%94%AE%E5%AD%97-%E6%A0%87%E8%AF%86%E7%AC%A6-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<p>今日类容：关键字、标识符、数据类型、常亮、变量</p>
<span id="more"></span>

<h1 id="第一章、关键字"><a href="#第一章、关键字" class="headerlink" title="第一章、关键字"></a>第一章、关键字</h1><h2 id="1-1、什么是关键字"><a href="#1-1、什么是关键字" class="headerlink" title="1.1、什么是关键字"></a>1.1、什么是关键字</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">关键字：被Java语言赋予了特殊含义的单词称为关键字</span><br><span class="line">保留字：暂时还没有赋予特殊含义对的单词，goto、<span class="keyword">const</span>等</span><br></pre></td></tr></table></figure>

<h2 id="1-2、常见的关键字"><a href="#1-2、常见的关键字" class="headerlink" title="1.2、常见的关键字"></a>1.2、常见的关键字</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HelloWorld 案例中，出现的关键字有 <span class="keyword">public</span> 、<span class="class"><span class="keyword">class</span> 、 <span class="title">static</span> 、 <span class="title">void</span> 等，这些单词已经被 <span class="title">Java</span> 赋予了特殊含义，全都是小写字母，<span class="title">notepad</span>++ 中颜色特殊高亮。</span></span><br></pre></td></tr></table></figure>

<h1 id="第二章、标识符"><a href="#第二章、标识符" class="headerlink" title="第二章、标识符"></a>第二章、标识符</h1><h2 id="2-1、什么是标识符"><a href="#2-1、什么是标识符" class="headerlink" title="2.1、什么是标识符"></a>2.1、什么是标识符</h2><p>标识符：是指在程序中，我们自己定义内容。比如类的名字、方法的名字和变量的名字等等，都是标识符。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// HelloWorld案例中，出现的标识符有类名：HelloWorld </span></span><br></pre></td></tr></table></figure>

<h2 id="2-2、标识符的命名规则"><a href="#2-2、标识符的命名规则" class="headerlink" title="2.2、标识符的命名规则"></a>2.2、标识符的命名规则</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）标识符由大小写字母、阿拉伯数字、下划线“_”、美元符号“$”组成，不能以数字开头</span><br><span class="line"><span class="number">2</span>）不能把java关键字和保留字作为标识符</span><br><span class="line"><span class="number">3</span>）标识符对大小写敏感（大小写意义不一样）</span><br><span class="line"><span class="number">4</span>）标识符没有长度限制（不能瞎定义）   见名知义</span><br><span class="line">⚠️注意：坚决不能用拼音或汉字或者中英结合的命名方法</span><br></pre></td></tr></table></figure>

<h2 id="2-3、命名规范"><a href="#2-3、命名规范" class="headerlink" title="2.3、命名规范"></a>2.3、命名规范</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）类名、接口名：单词首字母大写（如果多个单词组合，每个单词首字母大写，其余小写）</span><br><span class="line">  Demo 、HelloWorld</span><br><span class="line"><span class="number">2</span>）方法名、变量名：单词全部小写（如果多个单词组合，从第二个单词开始，首字母全部大写，其余小写）</span><br><span class="line">  add、findAllUser name、myName</span><br><span class="line"><span class="number">3</span>）常量名：全部大写（如果多个单词组合，每个单词用下划线_隔开）</span><br><span class="line">  MAX TOTAL_COUNT</span><br></pre></td></tr></table></figure>

<h1 id="第三章、数据类型"><a href="#第三章、数据类型" class="headerlink" title="第三章、数据类型"></a>第三章、数据类型</h1><h2 id="3-1、什么是数据类型"><a href="#3-1、什么是数据类型" class="headerlink" title="3.1、什么是数据类型"></a>3.1、什么是数据类型</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">我们人类可以很容易的分清数字与字符的区别，但是计算机并不能呀，计算机虽然很强大，但从某种角度上看又很傻，除非你明确的告诉它，<span class="number">1</span>是数字，“汉”是文字，否则它是分不清<span class="number">1</span>和‘汉’的区别的，因此，在每个编程语言里都会有一个叫数据类型的东西，其实就是对常用的各种数据类型进行了明确的划分，你想让计算机进行数值运算，你就传数字给它，你想让他处理文字，就传字符串类型给它</span><br></pre></td></tr></table></figure>

<h2 id="3-2、数据类型分类"><a href="#3-2、数据类型分类" class="headerlink" title="3.2、数据类型分类"></a>3.2、数据类型分类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">数据类型分为两大类：</span><br><span class="line">  基本类型：<span class="keyword">byte</span>、<span class="keyword">short</span>、<span class="keyword">int</span>、<span class="keyword">long</span>、<span class="keyword">float</span>、<span class="keyword">double</span>、<span class="keyword">char</span>、<span class="keyword">boolean</span></span><br><span class="line">  引用类型：数组、字符串、类、接口</span><br><span class="line">基本数据类型又分为四大类：</span><br><span class="line">	整数、浮点型、字符、布尔</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">数据类型</th>
<th align="center">关键字</th>
<th align="center">内存大小</th>
<th align="center">取值范围</th>
</tr>
</thead>
<tbody><tr>
<td align="center">字节型</td>
<td align="center">byte</td>
<td align="center">1个字节（8位）</td>
<td align="center">-2^7～2^7-1</td>
</tr>
<tr>
<td align="center">短整型</td>
<td align="center">short</td>
<td align="center">2个字节（16位）</td>
<td align="center">-2^15～2^15-1</td>
</tr>
<tr>
<td align="center">整型</td>
<td align="center">int（默认）</td>
<td align="center">4个字节（32位）</td>
<td align="center">-2^31～2^31-1</td>
</tr>
<tr>
<td align="center">长整型</td>
<td align="center">long</td>
<td align="center">8个字节（64位）</td>
<td align="center">-2^63～2^63-1</td>
</tr>
<tr>
<td align="center">单精度浮点</td>
<td align="center">float</td>
<td align="center">4个字节（32位）</td>
<td align="center">默认值：0.0f</td>
</tr>
<tr>
<td align="center">双精度浮点</td>
<td align="center">double（默认）</td>
<td align="center">8个字节（64位）</td>
<td align="center">默认值：0.0d</td>
</tr>
<tr>
<td align="center">字符</td>
<td align="center">char</td>
<td align="center">2个字节（16位）</td>
<td align="center">0～65535</td>
</tr>
<tr>
<td align="center">布尔类</td>
<td align="center">boolean</td>
<td align="center">1个字节（8位）</td>
<td align="center">true、false</td>
</tr>
</tbody></table>
<h1 id="第四章、常量"><a href="#第四章、常量" class="headerlink" title="第四章、常量"></a>第四章、常量</h1><h2 id="4-1、什么是常量"><a href="#4-1、什么是常量" class="headerlink" title="4.1、什么是常量"></a>4.1、什么是常量</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">常量；指在Java程序中不变的量</span><br><span class="line">当使用常量的时候，前缀 <span class="number">0</span> 表示 <span class="number">8</span>进制，而前缀 0x 代表<span class="number">16</span>进制</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">01</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">0x12</span>;</span><br></pre></td></tr></table></figure>

<h2 id="4-2、常量的分类"><a href="#4-2、常量的分类" class="headerlink" title="4.2、常量的分类"></a>4.2、常量的分类</h2><table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">含义</th>
<th align="center">举例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">整数常量</td>
<td align="center">所有的整数</td>
<td align="center">-20、-1、0、24、101</td>
</tr>
<tr>
<td align="center">小数常量</td>
<td align="center">所有的小数</td>
<td align="center">0.1、-2.7、6.66</td>
</tr>
<tr>
<td align="center">字符常量</td>
<td align="center">单引号引起来,只能写一个字符，也可以不写</td>
<td align="center">‘a’、’’、’牛’</td>
</tr>
<tr>
<td align="center">字符串常量</td>
<td align="center">双引号引起来,可以写多个字符,也可以不写</td>
<td align="center">“a”、”666”、”你好吗？”、””</td>
</tr>
<tr>
<td align="center">布尔常量</td>
<td align="center">只有两个值：true、false（流程控制中讲解）</td>
<td align="center">true、false</td>
</tr>
<tr>
<td align="center">空常量</td>
<td align="center">只有一个值（引用数据类型中讲解）</td>
<td align="center">null</td>
</tr>
</tbody></table>
<h2 id="4-3、练习"><a href="#4-3、练习" class="headerlink" title="4.3、练习"></a>4.3、练习</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 需求：输出各种类型的常量	</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConstantDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">//输出整数常量</span></span><br><span class="line">    System.out.println(<span class="number">123</span>);</span><br><span class="line">    <span class="comment">//输出小数常量</span></span><br><span class="line">    System.out.println(<span class="number">0.125</span>);</span><br><span class="line">    <span class="comment">//输出字符常量</span></span><br><span class="line">    System.out.println(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">    <span class="comment">//输出布尔常量</span></span><br><span class="line">    System.out.println(<span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">//输出字符串常量</span></span><br><span class="line">    System.out.println(<span class="string">&quot;你好Java&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="第五章、变量"><a href="#第五章、变量" class="headerlink" title="第五章、变量"></a>第五章、变量</h1><h2 id="5-1、什么是变量"><a href="#5-1、什么是变量" class="headerlink" title="5.1、什么是变量"></a>5.1、什么是变量</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">在程序运行过程中会发生改变的量被称为变量</span><br><span class="line">一个变量每次只能保存一个数据，必须要明确保存的数据类型</span><br></pre></td></tr></table></figure>

<h2 id="5-2、变量的定义"><a href="#5-2、变量的定义" class="headerlink" title="5.2、变量的定义"></a>5.2、变量的定义</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）定义变量的格式：</span><br><span class="line">  数据类型 变量名 = 变量值;</span><br><span class="line"><span class="number">2</span>）注意	</span><br><span class="line">  <span class="keyword">long</span>类型：建议数据后加L表示。</span><br><span class="line">  <span class="keyword">float</span>类型：建议数据后加F表示。</span><br><span class="line"><span class="number">3</span>）注意⚠️</span><br><span class="line">  变量名称：在同一个大括号范围内，变量的名字不可以相同。</span><br><span class="line">  变量赋值：定义的变量，不赋值不能使用</span><br></pre></td></tr></table></figure>

<h2 id="5-3、练习"><a href="#5-3、练习" class="headerlink" title="5.3、练习"></a>5.3、练习</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Variable</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义字节型变量</span></span><br><span class="line">    <span class="keyword">byte</span> b = <span class="number">100</span>;</span><br><span class="line">    System.out.println(b);</span><br><span class="line">    <span class="comment">//定义短整型变量</span></span><br><span class="line">    <span class="keyword">short</span> s = <span class="number">1000</span>;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">    <span class="comment">//定义整型变量</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">123456</span>;</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    <span class="comment">//定义长整型变量</span></span><br><span class="line">    <span class="keyword">long</span> l = <span class="number">12345678900L</span>;</span><br><span class="line">    System.out.println(l);</span><br><span class="line">    <span class="comment">//定义单精度浮点型变量</span></span><br><span class="line">    <span class="keyword">float</span> f = <span class="number">5.5F</span>;</span><br><span class="line">    System.out.println(f);</span><br><span class="line">    <span class="comment">//定义双精度浮点型变量</span></span><br><span class="line">    <span class="keyword">double</span> d = <span class="number">8.5</span>;</span><br><span class="line">    System.out.println(d);</span><br><span class="line">    <span class="comment">//定义布尔型变量</span></span><br><span class="line">    <span class="keyword">boolean</span> bool = <span class="keyword">false</span>;</span><br><span class="line">    System.out.println(bool);</span><br><span class="line">    <span class="comment">//定义字符型变量</span></span><br><span class="line">    <span class="keyword">char</span> c = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    System.out.println(c);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java</category>
        <category>培训学习</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Phone Store 移动端手机商城</title>
    <url>/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/</url>
    <content><![CDATA[<p><strong><em>一个基于 SpringBoot+Vue 开发的移动端手机商城</em></strong></p>
<span id="more"></span>

<h2 id="Phone-Store"><a href="#Phone-Store" class="headerlink" title="Phone Store"></a>Phone Store</h2><p>基于移动端的手机商城</p>
<p>基于 Spring Boot + Vue 的前后端分离开发架构</p>
<h4 id="前端技术栈"><a href="#前端技术栈" class="headerlink" title="前端技术栈"></a>前端技术栈</h4><p>Vue + Vant UI + less</p>
<h4 id="后端技术栈"><a href="#后端技术栈" class="headerlink" title="后端技术栈"></a>后端技术栈</h4><p>Spring Boot + Spring Data JPA</p>
<h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><p>MySQL</p>
<h3 id="1-创建-Vue-项目"><a href="#1-创建-Vue-项目" class="headerlink" title="1. 创建 Vue 项目"></a>1. 创建 Vue 项目</h3><p>首先创建一个基础的vue项目，创建过程不做过多赘述。创建好了之后直接打开，进行插件安装。</p>
<h4 id="1-1插件安装"><a href="#1-1插件安装" class="headerlink" title="1.1插件安装"></a>1.1插件安装</h4><blockquote>
<p>Vant UI 安装命令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm i vant -S</span><br></pre></td></tr></table></figure>

<p><img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/VantUI%E5%AE%89%E8%A3%85.png" alt="VantUI安装"></p>
<blockquote>
<p>less 安装命令</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install less less-loader --save</span><br></pre></td></tr></table></figure>

<p><img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/less%E5%AE%89%E8%A3%85.png" alt="less安装"></p>
<h4 id="1-2-导入并启用插件"><a href="#1-2-导入并启用插件" class="headerlink" title="1.2 导入并启用插件"></a>1.2 导入并启用插件</h4><p>进入 src 目录下的 main.js 文件中。</p>
<blockquote>
<p>导入 vant 插件</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vant <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>导入 css 插件</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;vant/lib/index.css&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>启用 Vant UI 插件</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Vue.use(Vant);</span><br></pre></td></tr></table></figure>

<h3 id="2-界面实现"><a href="#2-界面实现" class="headerlink" title="2. 界面实现"></a>2. 界面实现</h3><h4 id="2-1-首页界面实现"><a href="#2-1-首页界面实现" class="headerlink" title="2.1 首页界面实现"></a>2.1 首页界面实现</h4><blockquote>
<p>导航代码:</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;van-tab v-for&#x3D;&quot;index in categories.length&quot; :title&#x3D;&quot;categories[index-1].name&quot; class&#x3D;&quot;tab&quot;&gt;</span><br></pre></td></tr></table></figure>

<p>利用 <code> v-for</code> 从<code> categories</code> 中遍历元素。</p>
<p><strong>categories:</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        categories: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;魅焰红&#x27;</span>,</span><br><span class="line">                type: <span class="number">1</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;极光蓝&#x27;</span>,</span><br><span class="line">                type: <span class="number">2</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;铂光金&#x27;</span>,</span><br><span class="line">                type: <span class="number">3</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&#x27;幻夜黑&#x27;</span>,</span><br><span class="line">                type: <span class="number">4</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>遍历商品</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;van-tab v-for&#x3D;&quot;index in categories.length&quot; :title&#x3D;&quot;categories[index-1].name&quot; class&#x3D;&quot;tab&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;van-card v-for&#x3D;&quot;(item,index) in phones&quot;</span><br><span class="line">              :price&#x3D;&quot;item.price&quot;</span><br><span class="line">              :desc&#x3D;&quot;item.desc&quot;</span><br><span class="line">              :title&#x3D;&quot;item.title&quot;</span><br><span class="line">              :thumb&#x3D;&quot;item.thumb&quot;</span><br><span class="line">              &gt;</span><br><span class="line">        &lt;template #tags&gt;</span><br><span class="line">&lt;van-tag v-for&#x3D;&quot;tag in item.tag&quot; color&#x3D;&quot;#f2826a&quot; style&#x3D;&quot;margin-left: 5px;&quot;&gt;&#123;&#123;tag.name&#125;&#125;&lt;&#x2F;van-tag&gt;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">        &lt;template #footer&gt;</span><br><span class="line">&lt;van-button round type&#x3D;&quot;info&quot; size&#x3D;&quot;mini&quot; @click&#x3D;&quot;buy(index)&quot;&gt;购买&lt;&#x2F;van-button&gt;</span><br><span class="line">        &lt;&#x2F;template&gt;</span><br><span class="line">    &lt;&#x2F;van-card&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;van-tab&gt;</span><br></pre></td></tr></table></figure>

<p><strong>phones:</strong></p>
<p>​    静态测试数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">phones: [</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="number">1</span>,</span><br><span class="line">        title: <span class="string">&quot;Honor 8A&quot;</span>,</span><br><span class="line">        price: <span class="string">&quot;2800.00&quot;</span>,</span><br><span class="line">        desc: <span class="string">&quot;魅焰红&quot;</span>,</span><br><span class="line">        tag: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;720P珍珠屏&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;Micro USB接口&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">        thumb: <span class="string">&quot;../static/e84a2e03-7f19-41d2-98a5-a5c16b7e252d.jpg&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="number">2</span>,</span><br><span class="line">        title: <span class="string">&quot;Honor 10 青春版&quot;</span>,</span><br><span class="line">        price: <span class="string">&quot;2800.00&quot;</span>,</span><br><span class="line">        desc: <span class="string">&quot;极光蓝&quot;</span>,</span><br><span class="line">        tag: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;720P珍珠屏&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;EMUI9 Lite&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">        thumb: <span class="string">&quot;../static/8f0bd0d0-a11e-4185-927e-04b54ff4a1bd.jpg&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="number">3</span>,</span><br><span class="line">        title: <span class="string">&quot;Honor V20&quot;</span>,</span><br><span class="line">        price: <span class="string">&quot;3450.00&quot;</span>,</span><br><span class="line">        desc: <span class="string">&quot;铂光金&quot;</span>,</span><br><span class="line">        tag: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;2+1独立三卡槽&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        thumb: <span class="string">&quot;../static/fd7fee3c-a35c-477b-b007-9fda6e9c589a.jpg&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="number">4</span>,</span><br><span class="line">        title: <span class="string">&quot;HUAWEI Mate 20 Pro&quot;</span>,</span><br><span class="line">        price: <span class="string">&quot;4550.00&quot;</span>,</span><br><span class="line">        desc: <span class="string">&quot;幻夜黑&quot;</span>,</span><br><span class="line">        tag: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;内存3GB&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;EMUI9 Lite&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">        thumb: <span class="string">&quot;../static/cb819ad9-ec6f-4123-a4e9-aa629e2f8224.jpg&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="number">5</span>,</span><br><span class="line">        title: <span class="string">&quot;HUAWEI nova 5 Pro&quot;</span>,</span><br><span class="line">        price: <span class="string">&quot;5450.00&quot;</span>,</span><br><span class="line">        desc: <span class="string">&quot;5450.00&quot;</span>,</span><br><span class="line">        tag: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;内存3GB&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;Micro USB接口&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">        thumb: <span class="string">&quot;../static/8a0f5be0-3c78-4f23-b58b-dc2a92f1f95a.jpg&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="number">1</span>,</span><br><span class="line">        title: <span class="string">&quot;HUAWEI P30&quot;</span>,</span><br><span class="line">        price: <span class="string">&quot;8700.00&quot;</span>,</span><br><span class="line">        desc: <span class="string">&quot;极光蓝&quot;</span>,</span><br><span class="line">        tag: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;720P珍珠屏&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                name: <span class="string">&quot;内存3GB&quot;</span></span><br><span class="line">            &#125;,</span><br><span class="line">        ],</span><br><span class="line">        thumb: <span class="string">&quot;../static/6dcad185-315f-40f0-87f2-52910f49c8b7.jpg&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p><strong>静态数据测试预览图：</strong></p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/演示1.png" width="50%">

<h5 id="2-1-1-导航切换（点击事件绑定）"><a href="#2-1-1-导航切换（点击事件绑定）" class="headerlink" title="2.1.1 导航切换（点击事件绑定）"></a>2.1.1 导航切换（点击事件绑定）</h5><p>当点击导航栏时，触发点击事件。后面将通过点击事件来进行页面的切换操作。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">   <span class="function"><span class="title">onClick</span>(<span class="params">index</span>)</span> &#123;</span><br><span class="line">     ...</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h5 id="2-1-2-Sku-商品规格"><a href="#2-1-2-Sku-商品规格" class="headerlink" title="2.1.2 Sku 商品规格"></a>2.1.2 Sku 商品规格</h5><h6 id="Sku-对象结构"><a href="#Sku-对象结构" class="headerlink" title="Sku 对象结构"></a>Sku 对象结构</h6><p>使用 Vant UI 提供的 Sku 商品规格组价模块来制作商品规格界面。</p>
<p>详细文档连接：<a href="https://vant-contrib.gitee.io/vant/#/zh-CN/sku#dai-ma-yan-shi">https://vant-contrib.gitee.io/vant/#/zh-CN/sku#dai-ma-yan-shi</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">sku: &#123;</span><br><span class="line">  <span class="comment">// 所有sku规格类目与其值的从属关系，比如商品有颜色和尺码两大类规格，颜色下面又有红色和蓝色两个规格值。</span></span><br><span class="line">  <span class="comment">// 可以理解为一个商品可以有多个规格类目，一个规格类目下可以有多个规格值。</span></span><br><span class="line">  tree: [</span><br><span class="line">    &#123;</span><br><span class="line">      k: <span class="string">&#x27;颜色&#x27;</span>, <span class="comment">// skuKeyName：规格类目名称</span></span><br><span class="line">      k_s: <span class="string">&#x27;s1&#x27;</span>, <span class="comment">// skuKeyStr：sku 组合列表（下方 list）中当前类目对应的 key 值，value 值会是从属于当前类目的一个规格值 id</span></span><br><span class="line">      v: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">&#x27;1&#x27;</span>, <span class="comment">// skuValueId：规格值 id</span></span><br><span class="line">          name: <span class="string">&#x27;红色&#x27;</span>, <span class="comment">// skuValueName：规格值名称</span></span><br><span class="line">          imgUrl: <span class="string">&#x27;https://img01.yzcdn.cn/1.jpg&#x27;</span>, <span class="comment">// 规格类目图片，只有第一个规格类目可以定义图片</span></span><br><span class="line">          previewImgUrl: <span class="string">&#x27;https://img01.yzcdn.cn/1p.jpg&#x27;</span>, <span class="comment">// 用于预览显示的规格类目图片</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">          name: <span class="string">&#x27;蓝色&#x27;</span>,</span><br><span class="line">          imgUrl: <span class="string">&#x27;https://img01.yzcdn.cn/2.jpg&#x27;</span>,</span><br><span class="line">          previewImgUrl: <span class="string">&#x27;https://img01.yzcdn.cn/2p.jpg&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      largeImageMode: <span class="literal">true</span>, <span class="comment">//  是否展示大图模式</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// 所有 sku 的组合列表，比如红色、M 码为一个 sku 组合，红色、S 码为另一个组合</span></span><br><span class="line">  list: [</span><br><span class="line">    &#123;</span><br><span class="line">      id: <span class="number">2259</span>, <span class="comment">// skuId</span></span><br><span class="line">      s1: <span class="string">&#x27;1&#x27;</span>, <span class="comment">// 规格类目 k_s 为 s1 的对应规格值 id</span></span><br><span class="line">      s2: <span class="string">&#x27;1&#x27;</span>, <span class="comment">// 规格类目 k_s 为 s2 的对应规格值 id</span></span><br><span class="line">      price: <span class="number">100</span>, <span class="comment">// 价格（单位分）</span></span><br><span class="line">      stock_num: <span class="number">110</span> <span class="comment">// 当前 sku 组合对应的库存</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  price: <span class="string">&#x27;1.00&#x27;</span>, <span class="comment">// 默认价格（单位元）</span></span><br><span class="line">  stock_num: <span class="number">227</span>, <span class="comment">// 商品总库存</span></span><br><span class="line">  collection_id: <span class="number">2261</span>, <span class="comment">// 无规格商品 skuId 取 collection_id，否则取所选 sku 组合对应的 id</span></span><br><span class="line">  none_sku: <span class="literal">false</span>, <span class="comment">// 是否无规格商品</span></span><br><span class="line">  messages: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">// 商品留言</span></span><br><span class="line">      datetime: <span class="string">&#x27;0&#x27;</span>, <span class="comment">// 留言类型为 time 时，是否含日期。&#x27;1&#x27; 表示包含</span></span><br><span class="line">      multiple: <span class="string">&#x27;0&#x27;</span>, <span class="comment">// 留言类型为 text 时，是否多行文本。&#x27;1&#x27; 表示多行</span></span><br><span class="line">      name: <span class="string">&#x27;留言&#x27;</span>, <span class="comment">// 留言名称</span></span><br><span class="line">      type: <span class="string">&#x27;text&#x27;</span>, <span class="comment">// 留言类型，可选: id_no（身份证）, text, tel, date, time, email</span></span><br><span class="line">      required: <span class="string">&#x27;1&#x27;</span>, <span class="comment">// 是否必填 &#x27;1&#x27; 表示必填</span></span><br><span class="line">      placeholder: <span class="string">&#x27;&#x27;</span> <span class="comment">// 可选值，占位文本</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  hide_stock: <span class="literal">false</span> <span class="comment">// 是否隐藏剩余库存</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>静态界面图如下：</p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/演示2.png" width="50%">

<h5 id="2-1-3-购买提交"><a href="#2-1-3-购买提交" class="headerlink" title="2.1.3 购买提交"></a>2.1.3 购买提交</h5><p>选后规格后，我们会进行提交操作，当点击“购买”按钮时需要获取数据。</p>
<p>所以我们可 以先想一想，需要提交的数据其实只要有 <strong style="color:green">商品的规格id和商品的数量</strong> 就可以了。</p>
<p>于是有点击事件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">onBuyClicked</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line"><span class="comment">//  console.log(item)</span></span><br><span class="line">    <span class="built_in">this</span>.$store.state.specsId = item.selectedSkuComb.s1</span><br><span class="line">    <span class="built_in">this</span>.$store.state.quantity = item.selectedNum</span><br><span class="line">    <span class="built_in">this</span>.$router.push(<span class="string">&#x27;/addressList&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当我们把item的值打印出来时可以在控制台看到如下图：</p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/演示3.png" width="50%">

<p>从图中可以看出，虽然我们从前端代码获取提交的只有商品规格id和商品数量，但是后台会从数据库中对数据进行整理，返回给前端的数据依旧是完整的。</p>
<h4 id="2-2-AddressList界面实现"><a href="#2-2-AddressList界面实现" class="headerlink" title="2.2 AddressList界面实现"></a>2.2 AddressList界面实现</h4><p>AddressList 界面的实现使用 Vant UI 的业务组件中的 <font style="color:green">AddressList 地址列表组件</font>，以下是它的基本用法。</p>
<p>当然，你也可以访问官网：<a href="https://vant-contrib.gitee.io/vant/#/zh-CN/address-list#dai-ma-yan-shi">https://vant-contrib.gitee.io/vant/#/zh-CN/address-list#dai-ma-yan-shi</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;van-address-list</span><br><span class="line">  v-model&#x3D;&quot;chosenAddressId&quot;</span><br><span class="line">  :list&#x3D;&quot;list&quot;</span><br><span class="line">  :disabled-list&#x3D;&quot;disabledList&quot;</span><br><span class="line">  disabled-text&#x3D;&quot;以下地址超出配送范围&quot;</span><br><span class="line">  default-tag-text&#x3D;&quot;默认&quot;</span><br><span class="line">  @add&#x3D;&quot;onAdd&quot;</span><br><span class="line">  @edit&#x3D;&quot;onEdit&quot;</span><br><span class="line">&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Toast &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      chosenAddressId: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">      list: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">          name: <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">          tel: <span class="string">&#x27;13000000000&#x27;</span>,</span><br><span class="line">          address: <span class="string">&#x27;浙江省杭州市西湖区文三路 138 号东方通信大厦 7 楼 501 室&#x27;</span>,</span><br><span class="line">          isDefault: <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">          name: <span class="string">&#x27;李四&#x27;</span>,</span><br><span class="line">          tel: <span class="string">&#x27;1310000000&#x27;</span>,</span><br><span class="line">          address: <span class="string">&#x27;浙江省杭州市拱墅区莫干山路 50 号&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">      disabledList: [</span><br><span class="line">        &#123;</span><br><span class="line">          id: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">          name: <span class="string">&#x27;王五&#x27;</span>,</span><br><span class="line">          tel: <span class="string">&#x27;1320000000&#x27;</span>,</span><br><span class="line">          address: <span class="string">&#x27;浙江省杭州市滨江区江南大道 15 号&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="function"><span class="title">onAdd</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      Toast(<span class="string">&#x27;新增地址&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">onEdit</span>(<span class="params">item, index</span>)</span> &#123;</span><br><span class="line">      Toast(<span class="string">&#x27;编辑地址:&#x27;</span> + index);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>预览图：</p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/演示4.png" width="50%">

<h4 id="2-3-AddressNew界面实现"><a href="#2-3-AddressNew界面实现" class="headerlink" title="2.3 AddressNew界面实现"></a>2.3 AddressNew界面实现</h4><p>这个界面主要用来新增地址，当点击新增地址后会跳转到该界面。</p>
<p>在实现该界面之前，必须导入一个名为 <strong style="color:red"> area.js </strong> 的文件，该文件主要用来存储各个省市的地址信息，用来提供选项调用。</p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/address.png" width="50%">

<p>AddressNew 界面可以使用 Vant UI 中的AddressEdit 组件进行实现。<br>文档链接：<a href="https://vant-contrib.gitee.io/vant/#/zh-CN/address-edit">https://vant-contrib.gitee.io/vant/#/zh-CN/address-edit</a></p>
<p><strong>基础用法：</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;van-address-edit</span><br><span class="line">  :area-list&#x3D;&quot;areaList&quot;</span><br><span class="line">  show-postal</span><br><span class="line">  show-delete</span><br><span class="line">  show-set-default</span><br><span class="line">  show-search-result</span><br><span class="line">  :search-result&#x3D;&quot;searchResult&quot;</span><br><span class="line">  :area-columns-placeholder&#x3D;&quot;[&#39;请选择&#39;, &#39;请选择&#39;, &#39;请选择&#39;]&quot;</span><br><span class="line">  @save&#x3D;&quot;onSave&quot;</span><br><span class="line">  @delete&#x3D;&quot;onDelete&quot;</span><br><span class="line">  @change-detail&#x3D;&quot;onChangeDetail&quot;</span><br><span class="line">&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Toast &#125; <span class="keyword">from</span> <span class="string">&#x27;vant&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      areaList,</span><br><span class="line">      searchResult: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    <span class="function"><span class="title">onSave</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      Toast(<span class="string">&#x27;save&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">onDelete</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      Toast(<span class="string">&#x27;delete&#x27;</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">onChangeDetail</span>(<span class="params">val</span>)</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (val) &#123;</span><br><span class="line">        <span class="built_in">this</span>.searchResult = [</span><br><span class="line">          &#123;</span><br><span class="line">            name: <span class="string">&#x27;黄龙万科中心&#x27;</span>,</span><br><span class="line">            address: <span class="string">&#x27;杭州市西湖区&#x27;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        ];</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.searchResult = [];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>预览图：</p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/演示5.png" width="50%">

<h4 id="2-4-AddressEdit界面实现"><a href="#2-4-AddressEdit界面实现" class="headerlink" title="2.4 AddressEdit界面实现"></a>2.4 AddressEdit界面实现</h4><p>AddressEdit 界面的实现和前面的 AddressNew 的界面相差无几，只需用同样的组件稍作修改就可以了。</p>
<p><strong>需要注意的是，</strong>在之前的 AddressList 页面中，需要对修改按钮绑定一个名为<code> onEdit()</code>的点击事件，方法为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">onEdit</span>(<span class="params">item</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = <span class="built_in">JSON</span>.stringify(item)</span><br><span class="line">    <span class="built_in">this</span>.$router.push(&#123;<span class="attr">path</span>:<span class="string">&#x27;/addressEdit&#x27;</span>,<span class="attr">query</span>:&#123;<span class="attr">item</span>:data&#125;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个方法的作用就是将地址列表里的地址对象传递给 AddressEdit 界面，从而实现对地址的编辑。</p>
<p>于是，对应的，在 AddressEdit 中的<code> created()</code>中需要取出数据：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">created</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//取出item对象</span></span><br><span class="line">    <span class="keyword">let</span> data = <span class="built_in">JSON</span>.parse(<span class="built_in">this</span>.$route.query.item)</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-5-Detail-界面实现"><a href="#2-5-Detail-界面实现" class="headerlink" title="2.5 Detail 界面实现"></a>2.5 Detail 界面实现</h4><p>该界面是订单详情界面，布局比较简单，我们采用 Vant UI 中的 Cell 单元格 的布局。</p>
<p>文档链接：<a href="https://vant-contrib.gitee.io/vant/#/zh-CN/cell">https://vant-contrib.gitee.io/vant/#/zh-CN/cell</a></p>
<p>适当使用 <code> span</code>来调整单元格大小使布局看起来更合理。</p>
<p><strong>另外，值得注意的是，在 Vant UI 中，对于金额的计数单位是 ‘分’ 而不是 ‘元’，所以在处理付款金额时，需要再乘以100：</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;van-submit-bar</span><br><span class="line">    :price=<span class="string">&quot;data.amount*100&quot;</span></span><br><span class="line">    button-text=<span class="string">&quot;确认付款&quot;</span></span><br><span class="line">    @submit=<span class="string">&quot;onSubmit&quot;</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure>

<p>界面预览：</p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/演示6.png" width="50%">

<h5 id="2-5-1-Success-界面实现"><a href="#2-5-1-Success-界面实现" class="headerlink" title="2.5.1 Success 界面实现"></a>2.5.1 Success 界面实现</h5><p>该界面最为简单，所以不做过多说明，所需数据仅仅只有付款金额。</p>
<p>界面预览：</p>
<img src="/2021/04/06/Phone-Store-%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%89%8B%E6%9C%BA%E5%95%86%E5%9F%8E/演示7.png" width="50%">]]></content>
      <categories>
        <category>项目实战</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>Spring Boot+Vue</tag>
        <tag>前后端分离</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo初次搭建个人博客</title>
    <url>/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h6 id="初次搭建博客，基于-hexo-搭建的静态博客。"><a href="#初次搭建博客，基于-hexo-搭建的静态博客。" class="headerlink" title="初次搭建博客，基于 hexo 搭建的静态博客。"></a>初次搭建博客，基于 hexo 搭建的静态博客。</h6><span id="more"></span>

<blockquote>
<p>简介：GitHub Pages 和 Hexo &amp; 原理</p>
<ul>
<li><h4 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="Hexo 是什么？"></a>Hexo 是什么？</h4><ul>
<li>官网：<a href="https://hexo.io/">hexo.io</a></li>
<li>Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</li>
</ul>
</li>
<li><h4 id="Hexo-GitHub-文章发布原理"><a href="#Hexo-GitHub-文章发布原理" class="headerlink" title="Hexo + GitHub 文章发布原理"></a>Hexo + GitHub 文章发布原理</h4><ul>
<li><p>在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub 上完成博文的发布。</p>
<p><img src="/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%8F%91%E6%96%87%E6%B5%81%E7%A8%8B.jpg" alt="发文流程"></p>
</li>
</ul>
</li>
<li><h4 id="优点和不足"><a href="#优点和不足" class="headerlink" title="优点和不足"></a>优点和不足</h4><ul>
<li><strong>优点：</strong>完全免费；静态站点，轻量快速；可按需求自由定制改造；托管在 GitHub，安全省心；迁移方便……</li>
<li><strong>缺点：</strong>发文不便，依赖于本地环境；更适合个人博客使用；GitHub 在国内访问速度有点不快。</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1 准备"></a>1 准备</h2><h3 id="1-1-注意事项"><a href="#1-1-注意事项" class="headerlink" title="1.1 注意事项"></a>1.1 注意事项</h3><ul>
<li><p>该博文使用 Windows 10 搭建；</p>
</li>
<li><p>将文中的 “用户名” 和 “邮箱” 替换为自己的 GitHub 账户名和绑定的邮箱；</p>
</li>
<li><p>统一使用 Git Bash 进行操作（支持 Win、Mac）；</p>
</li>
</ul>
<h3 id="1-2-环境搭建"><a href="#1-2-环境搭建" class="headerlink" title="1.2 环境搭建"></a>1.2 环境搭建</h3><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，安装 Node.js 和 Git。</p>
<ul>
<li>Node.js：<a href="https://link.zhihu.com/?target=https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></li>
<li>Git：<a href="https://link.zhihu.com/?target=https://git-scm.com/downloads">https://git-scm.com/downloads</a></li>
</ul>
<h2 id="2-本地安装-Hexo-博客程序"><a href="#2-本地安装-Hexo-博客程序" class="headerlink" title="2 本地安装 Hexo 博客程序"></a>2 本地安装 Hexo 博客程序</h2><p>新建一个文件夹用来存放 Hexo 的程序文件，如 MyBlog。打开该文件夹，右键 -&gt; Git Bash Here。</p>
<h3 id="2-1-安装-Hexo"><a href="#2-1-安装-Hexo" class="headerlink" title="2.1 安装 Hexo"></a>2.1 安装 Hexo</h3><p>在 <code>bash</code> 中进入 MyBlog 目录中，使用npm安装 Hexo ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>若安装较慢可以使用淘宝镜像安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p><img src="/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt="hexo安装成功"></p>
<h3 id="2-2-Hexo-初始化和本地预览"><a href="#2-2-Hexo-初始化和本地预览" class="headerlink" title="2.2 Hexo 初始化和本地预览"></a>2.2 Hexo 初始化和本地预览</h3><h4 id="初始化并安装所需组件"><a href="#初始化并安装所需组件" class="headerlink" title="初始化并安装所需组件"></a>初始化并安装所需组件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init         <span class="comment">#初始化</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>安装组件</p>
</blockquote>
<p>​        安装 hexo-asset-image 组件，用来在博客中显示图片。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p>​        或者用淘宝镜像安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<p> <img src="/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%AE%89%E8%A3%85%E5%9B%BE%E7%89%87%E6%8F%92%E4%BB%B6.png" alt="安装图片插件"></p>
<p>完成后依次输入以下命令，<strong>启动本地服务器进行预览:<br></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g     <span class="comment">#生成页面</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s	   <span class="comment">#启动预览</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%90%AF%E5%8A%A8%E9%A2%84%E8%A7%88.png" alt="启动预览"></p>
<p><strong>访问<code> http://localhost:4000</code>,出现 Hexo 默认页面，即本地博客安装成功！</strong></p>
<p><img src="/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt="本地安装成功"></p>
<h2 id="3-部署-Hexo-到-GitHub-Pages"><a href="#3-部署-Hexo-到-GitHub-Pages" class="headerlink" title="3 部署 Hexo 到 GitHub Pages"></a>3 部署 Hexo 到 GitHub Pages</h2><h3 id="3-1-创建GitHub-Pages-仓库"><a href="#3-1-创建GitHub-Pages-仓库" class="headerlink" title="3.1 创建GitHub Pages 仓库"></a>3.1 创建GitHub Pages 仓库</h3><p>登录到GitHub个人主页，选择 New repository:</p>
<p><img src="/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="创建仓库"></p>
<p><img src="/2021/04/04/%E5%9F%BA%E4%BA%8EHexo%E5%88%9D%E6%AC%A1%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%9302.jpg" alt="创建仓库02"></p>
<p>创建后默认自动启用 HTTPS，博客地址为：<code>https://用户名.github.io</code></p>
<h3 id="3-2-部署到仓库"><a href="#3-2-部署到仓库" class="headerlink" title="3.2 部署到仓库"></a>3.2 部署到仓库</h3><blockquote>
<p>设置用户名和邮箱</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;GitHub邮箱&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>创建 SSH 密匙：</p>
</blockquote>
<p>输入 <code> ssh-keygen -t rsa -C &quot;GitHub邮箱&quot;</code>，然后一路回车。</p>
<p><strong>添加密匙：</strong></p>
<p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p>
<p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p>
<p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p>
<blockquote>
<p>安装 hexo-deployer-git ：</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改配置文件 _config.yml :</p>
</blockquote>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">	<span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">	<span class="attr">repository:</span> <span class="string">https://github.com/用户名/用户名.github.io</span></span><br><span class="line">	<span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>开始生成和部署发布</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g   <span class="comment">#生成页面</span></span><br><span class="line">hexo d   <span class="comment">#部署发布</span></span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>必备技能</tag>
      </tags>
  </entry>
</search>
